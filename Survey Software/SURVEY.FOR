       PROGRAM SURVEY
C DEMONSTRATION EDUCATIONAL SAMPLE SURVEY PROGRAM
C ------------- ----------- ------ ------ -------
C
C RELEASE VERSION: AUGUST 1992, bug fix Jan. 1995
C
C TED CHANG, UNIVERSITY OF KANSAS, MARCH 1984, JUNE 1985, SEPT 1986.
C MODIFIED BY S. LOHR, UNIVERSITY OF MINNESOTA, DECEMBER 1988.
C             T. CHANG, UNIVERSITY OF VIRGINIA, APRIL 1991.
C             S. LOHR, ARIZONA STATE UNIVERSITY, JULY 1991, JULY 1992.
C    COPYRIGHT (C) 1992, T. CHANG AND S. LOHR
C
C REMARK: INSYS MUST BE SET TO SYSTEM TERMINAL INPUT FILE NUMBER.
C REMARK: comment lines below contain modifications for use with
C         Language Systems FORTRAN for the MacIntosh
C         These modifications set the 'creator' on output files;
C         allowing double click opening of output files
C         
C
C THE FOLLOWING PARAMETERS CAN BE SET TO CHANGE THE PERFORMANCE OF
C THE PROGRAM.  ALL ARE FOUND IN BLOCK DATA INITL.
C
C ISEED = INTEGER RANDOM NUMBER GENERATOR SEED.  ISEED MUST BE IN
C     THE RANGE 1 TO 2**31-1 INCLUSIVE.
C NHOUSE(I) = NUMBER OF HOUSEHOLDS IN DISTRICT I.
C XHP(I) = HOUSE PRICE CODE FOR DISTRICT I;  HOUSE PRICES WILL BE
C     GENERATED WITH A MEAN VALUE OF $30000+$7000*XHP.  IN THE RURAL
C     DISTRICTS THEY WILL BE UNCORRELATED WITH A STANDARD DEVIATION
C     OF $15000.  IN URBAN DISTRICTS THE STANDARD DEVIATION IS $4667 AND
C     EACH HOUSE WILL BE CORRELATED WITH ITS EIGHT CLOSEST NEIGHBORS.
C FPD(I) = MEAN FAMILY SIZE IN DISTRICT I.
C NCRUR = COST TO VISIT A RURAL DISTRICT.
C NCURB = COST TO VISIT AN URBAN DISTRICT.
C NCINT = COST TO COMPLETE AN INTERVIEW
C NCRVIS = COST TO VISIT A RURAL HOUSEHOLD
C NCUVIS = COST TO VISIT AN URBAN HOUSEHOLD
C
C NONRESPONSE PROBABILITIES:
C  PNRSP1=APPROXIMATE PROPORTION OF HOUSEHOLDS 'NOT AT HOME'.  THESE
C     HOUSEHOLDS WILL CHANGE FROM RUN TO RUN, WITH THE LARGER FAMILIES
C     MORE LIKELY TO BE AVAILABLE.
C  PNRSP2=PROPORTION OF HOUSEHOLDS 'UNWILLING TO ANSWER QUESTION 4 OF THE
C     QUESTIONAIRE'.  THESE HOUSEHOLDS WILL CHANGE FROM RUN TO RUN, WITH
C     THE FAMILIES WITH MIDDLE VALUE HOUSES TENDING TO BE WILLING TO ANSWER.
C  PNRSP3=PROPORTION OF HOUSEHOLDS GIVING RANDOM ANSWERS.  THESE
C     HOUSEHOLDS ARE FIXED FROM RUN TO RUN, BUT THEIR RESPONSES CHANGE.
C     80% OF THE FAMILIES IN THIS CATEGORY WILL GIVE MILDLY VARYING ANSWERS
C     TO QUESTIONS 4-9.  THE OTHER 20% ARE PATHOLOGICAL LIARS AND WILL GIVE
C     WILDLY RANDOM ANSWERS TO ALL 9 QUESTIONS.
C
C--------------------------------------------------------------------------
C
      IMPLICIT INTEGER (I-N)
      IMPLICIT REAL(A-H,O-Z)
      DIMENSION NHOUSE(75),NVISIT(75),NHOURS(5),IRURAL(75)
      DIMENSION FPD(75),XHP(75)
      CHARACTER*8 INUNIT,OUTUNI
      LOGICAL TERM
      COMMON IRURAL,JSEED,NHP,NADULT,NCHIL,NTV,PRICE,NHOURS
      COMMON /PARAM/ISEED,NHOUSE,XHP,FPD,NCRUR,NCURB,NCINT,NCRVIS,NCUVIS
      DATA PNRSP1/0.0/, PNRSP2/0.0/, PNRSP3/0.0/
      DATA INSYS/5/
C
C INITIALIZATION MODULE
      WRITE(*,5000)
23    WRITE(*,1200)
1200  FORMAT(
     &' ENTER FILENAME CONTAINING ADDRESSES--8 OR FEWER LETTERS'
     &/' IF ENTERING FROM TERMINAL, TYPE T')
      READ(*,'(A)',ERR=23,END=23) INUNIT
      IF (INUNIT .EQ. 'T' .OR. INUNIT .EQ. 't') THEN 
      IUNIT=INSYS
      TERM = .TRUE.
      ELSE
      IUNIT=11
      OPEN(UNIT=IUNIT,FILE=INUNIT)
      REWIND 11
      TERM = .FALSE.
      END IF
24    WRITE(*,1210)
1210  FORMAT(' ENTER FILENAME FOR OUTPUT--8 OR FEWER LETTERS')
      READ(*,'(A)',ERR=24,END=24) OUTUNI
      OPEN(UNIT=12,FILE=OUTUNI)
c in Language Systems FORTRAN for the Mac use the following instead
c      OPEN(UNIT=12,FILE=OUTUNI,CREATOR='EDIT')
c      creator 'ttxt' for teach text
25    WRITE(*,1220)
1220  FORMAT(' ENTER DESIRED THREE NONRESPONSE RATES:'/
     &  ' NOT-AT-HOMES, REFUSALS, RANDOM ANSWERS')
      READ(*,*,ERR=25,END=25) PNRSP1,PNRSP2,PNRSP3      
      IF(PNRSP1 .LT. 0.0 .OR. PNRSP2 .LT. 0.0 .OR. PNRSP3 .LT. 0.0
     &.OR. PNRSP1 .GT. 1.0 .OR. PNRSP2 .GT. 1.0 .OR. PNRSP3 .GT. 1.0)
     & THEN
      WRITE(*,1230)
1230  FORMAT(' NONRESPONSE RATES MUST BE BETWEEN 0 AND 1')
      GO TO 25
      END IF
      PNRSP=PNRSP1+PNRSP2+PNRSP3
      IF (PNRSP.GT.0.) GO TO 5
      ISEED1=25
      GO TO 6
 4    WRITE(*,1030)
 5    WRITE(*,1150)
      READ(*,*,ERR=4,END=4) ISEED1
      IF ((ISEED1.LT.0).OR.(ISEED1.GT.1000000)) GO TO 4
 6    WRITE(12,1000)
      DO 3 I=1,75
      NVISIT(I)=0
 3    CONTINUE
      NRESP=0
      NCOST=0
C
      NHST=0
      AVFAM=0.
      AVNHP = 0.
      SDNHP = 0.
      DO 1 I=1,43
      NHST=NHST+NHOUSE(I)
      AVNHP = AVNHP + XHP(I)*NHOUSE(I)
      SDNHP = SDNHP + XHP(I)*XHP(I)*NHOUSE(I)
      AVFAM=AVFAM+NHOUSE(I)*FPD(I)
 1    CONTINUE
      AVRUR=FLOAT(NHST)/43.
C IRURAL IS USED TO MAKE PEOPLE IN MORE ISOLATED DISTRICTS
C MORE WILLING TO SUBSCRIBE.
      DO 7 I=1,43
      IRURAL(I)=2
      IF (NHOUSE(I).LE.AVRUR) IRURAL(I)=3
 7    CONTINUE
      DO 2 I=44,75
      NHST = NHST + NHOUSE(I)
      AVNHP = AVNHP + XHP(I)*NHOUSE(I)
      SDNHP = SDNHP + XHP(I)*XHP(I)*NHOUSE(I)
      AVFAM=AVFAM+NHOUSE(I)*FPD(I)
      IRURAL(I)=0
      IF (I.GE.51) GO TO 2
      IRURAL(I)=1
      IF (I.GE.47) GO TO 2
      IRURAL(I)=2
 2    CONTINUE
      AVFAM=AVFAM/NHST
C Line below recovers within district variation in house price.
C Note: 4.591837 = (15000/7000)^2 and .4445079 = (4667/7000)^2
      WITHIN = (43.*AVRUR*4.591837 + (NHST-43.*AVRUR)*0.4445079)/NHST
      SDNHP = 7000.*SQRT(SDNHP/NHST - (AVNHP/NHST)**2 + WITHIN)
      AVNHP = 7000.*(AVNHP/NHST) + 30000.
      P4=.2*PNRSP3
C
C ADDRESS INPUT MODULE
 10   IF (TERM) WRITE(*,1010)
      I2=0
      READ(IUNIT,*,ERR=805,END=800) I2,J
      IF (I2.EQ.0) GO TO 900
      I=IABS(I2)
      IF (I.GT.75) GO TO 810
      IF ((J.LE.0).OR.(J.GT.NHOUSE(I))) GO TO 820
      IF (I2.GT.0) NVISIT(I)=NVISIT(I)+1
      CALL ANSWER(I,J)
C
C NONRESPONSE MODULE
C HOUSE VALUE ONLY
      IF (I2.LT.0) GO TO 710
C CHECK FOR NOT AT HOME
      JSEED1=NSEED(ISEED1,ISEED,JSEED)
      FRESP=RANDU(JSEED1)
      PNHOME=PNRSP1*EXP(1.-(NADULT+NCHIL)/AVFAM)
      IF (FRESP.LT.PNHOME) GO TO 720
      NRESP=NRESP+1
C CHECK FOR UNWILLINGNESS TO ANSWER QUESTION 4.  
C Assume Z=(NHP - mean)/s.d. ~ N(0,1) and let W ~ Unif(0,1) (indep. of Z).
C Let p = PNRSP2 and k = (1/(1 - p)^2 - 1)/2.  Then
C P{W > exp[-k Z^2]} = E[P{W > exp[-k Z^2] | Z}] = E [1 - exp[-k Z^2] ]
C                    = 1 - 1/sqrt(1+2k) = p
      IF (PNRSP2 .GT. 0.999) GO TO 740
      FRESP=RANDU(JSEED1)
      DEV = (NHP - AVNHP)/SDNHP
      PREFUS = 1.-EXP(- .5 * DEV**2 * (1./(1.-PNRSP2)**2 - 1.) )
      IF (FRESP.LT.PREFUS) GO TO 740
C CHECK FOR RANDOM ANSWERS
      FRESP=RANDU(JSEED)
      IF (FRESP.GE.PNRSP3) GO TO 700
      CORAND=.3
      IF (FRESP.GT.P4) GO TO 610
C WE HAVE A PATHOLOGICAL LIAR HERE
      NADULT=1+(NADULT-1)*2.*RANDU(JSEED1)
      NCHIL=NCHIL*2.*RANDU(JSEED1)
      NTV=NTV*2.*RANDU(JSEED1)
      NTV=MIN0(NTV,5)
      CORAND=1.0
 610  NHRMX=70.+46.*SQRT(FLOAT(NTV))+10.*RANDU(JSEED1)
      IF (NTV.EQ.0) NHRMX=0
      PRICE=PRICE*(1.-CORAND+2.*CORAND*RANDU(JSEED1))
      NHRT=0
      DO 620 II=2,5
      NHOURS(II)=NHOURS(II)*(1.-CORAND+2.*CORAND*RANDU(JSEED1))
      NHRT=NHRT+NHOURS(II)
 620  CONTINUE
      NHOURS(1)=NHRT*(1.+.5*ABS(RANDN(JSEED1)))
      IF (NHOURS(1).LE.NHRMX) GO TO 700
      FACT=FLOAT(NHRMX)/NHOURS(1)
      DO 630 II=1,5
      NHOURS(II)=FACT*NHOURS(II)
 630  CONTINUE
C
C STANDARD RETURNS
 700  NPRICE=5*MIN0(IFIX(PRICE/5.),5)
      WRITE(12,1020) I,J,NHP,NADULT,NCHIL,NTV,NPRICE,NHOURS
      IF (TERM) WRITE(*,1090)
      GO TO 10
 710  NCOST=NCOST+1
      IF (TERM) WRITE(*,1090)
      WRITE(12,1120) I,J,NHP
      GO TO 10
 720  IF (TERM) WRITE(*,1070)
      WRITE(12,1080) I,J,NHP
      GO TO 10
 740  WRITE(12,1140) I,J,NHP,NADULT,NCHIL,NTV,NHOURS
      GO TO 10
C
C ERROR RETURNS
 800  IF (I2.EQ.0) GO TO 900
 805  WRITE(*,1030)
      WRITE(*,1040)
      GO TO 10
 810  WRITE(*,1050)
      WRITE(*,1040)
      GO TO 10
 820  WRITE(*,1060) I,NHOUSE(I)
      WRITE(*,1040)
      GO TO 10
C
C COST MODULE
 900  DO 910 I=1,46
      IF (NVISIT(I).EQ.0) GO TO 910
      NCOST=NCOST+NCRUR+6*NVISIT(I)
 910  CONTINUE
      DO 920 I=47,75
      IF (NVISIT(I).EQ.0) GO TO 920
      NCOST=NCOST+NCURB+3*NVISIT(I)
 920  CONTINUE
      NCOST=NCOST+10*NRESP
      WRITE(*,1100) NCOST
      WRITE(12,1100) NCOST
      IF (PNRSP.GT.0.) WRITE(12,1110) ISEED1
      STOP
C
C
 1000 FORMAT(' ADDRESS',4X,'VALUE',3X,'1',3X,'2',3X,'3',3X,'4',4X,
     &'5',4X,'6',4X,'7',4X,'8',4X,'9')
 1010 FORMAT(' ENTER DISTRICT NUMBER, HOUSE NUMBER')
 1020 FORMAT(1X,I3,I5,2X,I6,4(2X,I2),5(2X,I3))
 1030 FORMAT(' THERE HAS BEEN AN INPUT ERROR.')
 1040 FORMAT(' RE-ENTER DISTRICT NUMBER, HOUSE NUMBER'/
     &' SET DISTRICT NUMBER = 0 TO STOP PROGRAM.')
 1050 FORMAT(' DISTRICT NUMBERS MUST BE BETWEEN -75 AND 75.')
 1060 FORMAT(' IN DISTRICT ',I2,' HOUSE NUMBERS MUST BE BETWEEN 1
     & AND ',I4)
 1070 FORMAT(' THIS HOUSEHOLD IS NOT AT HOME.')
 1080 FORMAT(1X,I3,I5,2X,I6,3X,'NOT AT HOME')
 1090 FORMAT(' DONE')
 1100 FORMAT(' THE COST OF THIS SESSION IS ',I6,' DOLLARS.')
 1110 FORMAT(' SEED NUMBER: ',I12)
 1120 FORMAT(1X,I3,I5,2X,I6,3X,'FROM COUNTY RECORDS')
 1140 FORMAT(1X,I3,I5,2X,I6,3(2X,I2),3X,'*',5(2X,I3))
 1150 FORMAT(' ENTER AN INTEGER BETWEEN 1 AND 1,000,000')
 5000 FORMAT(' DEMONSTRATION EDUCATIONAL SAMPLE SURVEY PROGRAM'/
     &' COPYRIGHT (C) 1992, TED CHANG AND SHARON LOHR')
      END
C
C************************************************************************
C
      SUBROUTINE ANSWER(I,J)
C
C SUBROUTINE TO GENERATE ANSWERS TO QUESTIONNAIRE FOR ADDRESS I,J
C
      INTEGER NHOUSE(75),NHOURS(5),IRURAL(75)
      REAL FPD(75),XHP(75),ERRHSE(5)
      INTEGER ISEED,JSEED,NHP,NADULT,NCHIL,NTV
      REAL PRICE,RANDN,RANDU
      INTEGER IRANDP
C
      INTEGER I,J,J1,NEIGH,NSEED,II,NFAM,NHRT,NHRMX
      REAL ERR1,ERR2
      REAL RLAM,FCHIL,FACT
      COMMON /PARAM/ISEED,NHOUSE,XHP,FPD,NCRUR,NCURB,NCINT,NCRVIS,NCUVIS
      COMMON IRURAL,JSEED,NHP,NADULT,NCHIL,NTV,PRICE,NHOURS
C
C HOUSE PRICE GENERATION MODULE
      IF (I.GT.43) GO TO 150
      JSEED=NSEED(I,J,ISEED)
      ERR1=1.5*RANDN(JSEED)
      GO TO 190
 150  DO 160 NEIGH=1,5
      J1=MOD(NHOUSE(I)+J+NEIGH-2,NHOUSE(I))
      JSEED=NSEED(I,J1,ISEED)
      ERRHSE(NEIGH)=RANDN(JSEED)
 160  CONTINUE
      ERR1=.25*(.5*ERRHSE(1)+ERRHSE(2)+ERRHSE(3)+ERRHSE(4)+.5*ERRHSE(5))
 190  NHP=30000+7000*XHP(I)+10000*ERR1
      NHP=MAX0(10000,NHP)
C
C FAMILY COUNT MODULE
      RLAM=FPD(I)+ERR1-1
      RLAM=AMAX1(RLAM,.5)
      NFAM=IRANDP(RLAM,JSEED)+1
      FCHIL=RANDU(JSEED)
      NCHIL=FCHIL*(NFAM-1)
      NADULT=NFAM-NCHIL
C
C NUMBER OF TV'S AND PRICE RESPONSE MODULE
      NTV=.2*NFAM+.00001*NHP+RANDN(JSEED)+1.0
      NTV=MAX0(0,NTV)
      NTV=MIN0(5,NTV)
      ERR2=RANDN(JSEED)
      PRICE=1.75*XHP(I)+2.5*ERR1+IRURAL(I)+NFAM+3.*ERR2
      PRICE=AMAX1(PRICE,0.)
      IF (NTV.EQ.0) PRICE=0.
C
C WATCHING HABITS MODULE
      NHOURS(2)=(NFAM+ERR2+IRURAL(I)+RANDN(JSEED))*1.5
      NHOURS(3)=(NFAM+ERR2+IRURAL(I)+3.*RANDN(JSEED))*4.0
      NHOURS(4)=6+NCHIL*3+IRURAL(I)+4.0*RANDN(JSEED)
      IF (NCHIL.EQ.0) NHOURS(4)=0
      NHOURS(5)=(NFAM+ERR2+IRURAL(I)+RANDN(JSEED))*4.0
      NHRT=0
      DO 510 II=2,5
      NHOURS(II)=MAX0(NHOURS(II),0)
      NHRT=NHOURS(II)+NHRT
 510  CONTINUE
      NHOURS(1)=NHRT*(1+.5*ABS(RANDN(JSEED)))
      NHRMX=70.+46.*SQRT(FLOAT(NTV))+10.*RANDU(JSEED)
      IF (NTV.EQ.0) NHRMX=0
      IF (NHOURS(1).LE.NHRMX) RETURN
      FACT=FLOAT(NHRMX)/NHOURS(1)
      DO 520 II=1,5
      NHOURS(II)=NHOURS(II)*FACT
 520  CONTINUE
      RETURN
      END
C
C************************************************************************
C
      INTEGER FUNCTION NSEED(I1,I2,I3)
C
C SUBROUTINE TO COMBINE THREE INTEGERS INTO A SEED
C
      INTEGER I1,I2,I3,J(3),JSEED,K,IND1,NSEED1
      REAL X
      DATA JSEED/2147483645/
      J(1) = MOD(IABS(I1),JSEED) + 1
      J(2) = MOD(IABS(I2),JSEED) + 1
      J(3) = MOD(IABS(I3),JSEED) + 1
      X=RANDU(J(1))
      IND1=1
      NSEED1=0
      DO 20 K=1,9
        NSEED1=NSEED1*10
        IND1=MOD(J(IND1),2)+IND1
        IND1=MOD(IND1,3)+1
        X=RANDU(J(IND1))
        NSEED1=NSEED1+MOD(J(IND1),10)
        X=RANDU(J(IND1))
 20   CONTINUE
      X=RANDU(NSEED1)
      NSEED=NSEED1
      RETURN
      END
C
C**************************************************************************
C
      REAL FUNCTION RANDU(IX)
C
C UNIFORM RANDOM NUMBER GENERATOR.
C REF: SCHRAGE, L. 1979 'A MORE PORTABLE FORTRAN RANDOM NUMBER GENERATOR'
C      A. C. M. TRANSACTIONS ON MATHEMATICAL SOFTWARE V5 132-138.
C
      INTEGER A,P,IX,B15,B16,XHI,XALO,LEFTLO,FHI,K
      DATA A/16807/,B15/32768/,B16/65536/,P/2147483647/
      XHI=IX/B16
      XALO=(IX-XHI*B16)*A
      LEFTLO=XALO/B16
      FHI=XHI*A+LEFTLO
      K=FHI/B15
      IX=(((XALO-LEFTLO*B16)-P)+(FHI-K*B15)*B16)+K
      IF (IX.LT.0) IX=IX+P
      RANDU=FLOAT(IX)*4.656612875E-10
      RETURN
      END
C
C**************************************************************************
C
      REAL FUNCTION RANDN(ISEED)
C
C STANDARD NORMAL RANDOM NUMBER GENERATOR
C
      REAL RANDU
      INTEGER ISEED,ISEED1,I
      REAL X1,X2,S
      ISEED1=ISEED
      DO 10 I=1,1000
      X1=2.*RANDU(ISEED)-1.
      X2=2.*RANDU(ISEED)-1.
      S=X1*X1+X2*X2
      IF (S.LT.1.) GO TO 20
 10   CONTINUE
      WRITE(*,1000) ISEED1
      RANDN=X1
      RETURN
 20   RANDN=X1*SQRT(-2.*ALOG(S)/S)
      RETURN
 1000 FORMAT(' ERROR IN RANDN.  PLEASE COPY THE FOLLOWING NUMBER AND
     & INFORM INSTRUCTOR'/1X,I12)
      END
C
C**************************************************************************
C
      INTEGER FUNCTION IRANDP(RLAM,ISEED)
C
C POISSON RANDOM NUMBER GENERATOR.
C
      INTEGER ISEED,ISEED1,I
      REAL S,RLAM,RANDU
      ISEED1=ISEED
      S=0.
      DO 10 I=1,1000
      S=S-ALOG(RANDU(ISEED))
      IF (S.GT.RLAM) GO TO 20
 10   CONTINUE
      WRITE(*,1000) ISEED1
      IRANDP=1000
      RETURN
 20   IRANDP=I-1
      RETURN
 1000 FORMAT(' ERROR IN IRANDP.  PLEASE COPY THE FOLLOWING NUMBER AND
     & INFORM INSTRUCTOR.'/1X,I12)
      END


C **************************************************************

      BLOCK DATA INITL
      INTEGER NHOUSE(75),ISEED
      REAL FPD(75),XHP(75)
      COMMON /PARAM/ISEED,NHOUSE,XHP,FPD,NCRUR,NCURB,NCINT,NCRVIS,NCUVIS
      DATA ISEED/4214202/
      DATA NHOUSE/142,153,135,128,110,103,105,385,296,287,
     &253,172,198,432,248,251,221,297,235,171,
     &135,254,203,244,202,103,102,115,180,190,
     &152,141,143,135,178,221,174,101,95,130,
     &152,169,91,283,562,312,897,734,963,642,
     &525,726,674,585,553,583,911,1051,918,799,
     &545,895,1313,968,717,651,886,912,898,759,
     &722,753,793,725,802/
      DATA XHP/ 5.0, 4.1, 5.0, 3.7, 3.9, 4.0, 5.7, 6.8, 6.3, 5.6,
     & 4.3, 3.6, 5.0, 6.7, 5.3, 3.4, 5.4, 6.9, 5.9, 3.2,
     & 5.3, 5.0, 6.7, 6.7, 5.6, 3.7, 4.5, 4.5, 5.4, 5.6,
     & 5.6, 4.5, 3.8, 3.8, 4.5, 4.4, 3.5, 3.3, 4.0, 3.7,
     & 3.6, 3.8, 3.0, 4.3, 3.9, 3.1, 4.6, 4.5, 4.3, 3.5,
     & 9.3, 5.5, 3.5, 2.6, 1.9, 9.4, 7.8, 4.0, 1.0, 2.1,
     &10.3, 6.5, 3.7, 4.7, 5.6, 9.2, 7.6, 6.7, 6.0, 7.2,
     & 8.2, 7.1, 7.1, 7.7, 7.2/
      DATA FPD/7*3.8,4*3.6,2*3.8,3*3.6,3.8,2*3.6,2*3.8,3*3.6,19*3.8,
     &7*3.6,2*3.5,3.0,2*2.0,3.5,3.0,2.5,2*2.0,3.5,3.0,2.0,2.5,3.0,3.5,
     &3.2,2*3.0,6*3.5/
      DATA NCRUR/60/, NCURB/20/, NCINT/10/, NCRVIS/6/, NCUVIS/3/
      END
